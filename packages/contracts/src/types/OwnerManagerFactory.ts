/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { OwnerManager } from "./OwnerManager";

export class OwnerManagerFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<OwnerManager> {
    return super.deploy(overrides || {}) as Promise<OwnerManager>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OwnerManager {
    return super.attach(address) as OwnerManager;
  }
  connect(signer: Signer): OwnerManagerFactory {
    return super.connect(signer) as OwnerManagerFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OwnerManager {
    return new Contract(address, _abi, signerOrProvider) as OwnerManager;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "AddedOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    name: "ChangedThreshold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "RemovedOwner",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
    ],
    name: "addOwnerWithThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
    ],
    name: "changeThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "prevOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "prevOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "swapOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061099e806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a0e67e2b1161005b578063a0e67e2b14610107578063e318b52b1461015f578063e75235b814610197578063f8dc5dd9146101b15761007d565b80630d582f13146100825780632f54bf6e146100b0578063694e80c3146100ea575b600080fd5b6100ae6004803603604081101561009857600080fd5b506001600160a01b0381351690602001356101e7565b005b6100d6600480360360208110156100c657600080fd5b50356001600160a01b0316610365565b604080519115158252519081900360200190f35b6100ae6004803603602081101561010057600080fd5b50356103a0565b61010f610460565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561014b578181015183820152602001610133565b505050509050019250505060405180910390f35b6100ae6004803603606081101561017557600080fd5b506001600160a01b038135811691602081013582169160409091013516610543565b61019f61078e565b60408051918252519081900360200190f35b6100ae600480360360608110156101c757600080fd5b506001600160a01b03813581169160208101359091169060400135610794565b6101ef61092a565b6001600160a01b0382161580159061021157506001600160a01b038216600114155b801561022657506001600160a01b0382163014155b61025f576040805162461bcd60e51b8152602060048201526005602482015264475332303360d81b604482015290519081900360640190fd5b6001600160a01b0382811660009081526020819052604090205416156102b4576040805162461bcd60e51b815260206004820152600560248201526411d4cc8c0d60da1b604482015290519081900360640190fd5b600060208181527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d80546001600160a01b0386811680865260408087208054939094166001600160a01b0319938416179093556001958690528354909116811790925583548401909355825190815291517f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea269281900390910190a1806002541461036157610361816103a0565b5050565b60006001600160a01b03821660011480159061039a57506001600160a01b038281166000908152602081905260409020541615155b92915050565b6103a861092a565b6001548111156103e7576040805162461bcd60e51b8152602060048201526005602482015264475332303160d81b604482015290519081900360640190fd5b6001811015610425576040805162461bcd60e51b815260206004820152600560248201526423a999181960d91b604482015290519081900360640190fd5b60028190556040805182815290517f610f7ff2b304ae8903c3de74c60c6ab1f7d6226b3f52c5161905bb5ad4039c939181900360200190a150565b6060600060015467ffffffffffffffff8111801561047d57600080fd5b506040519080825280602002602001820160405280156104a7578160200160208202803683370190505b506001600090815260208190527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d54919250906001600160a01b03165b6001600160a01b03811660011461053b578083838151811061050257fe5b6001600160a01b0392831660209182029290920181019190915291811660009081529182905260409091205460019290920191166104e4565b509091505090565b61054b61092a565b6001600160a01b0381161580159061056d57506001600160a01b038116600114155b801561058257506001600160a01b0381163014155b6105bb576040805162461bcd60e51b8152602060048201526005602482015264475332303360d81b604482015290519081900360640190fd5b6001600160a01b038181166000908152602081905260409020541615610610576040805162461bcd60e51b815260206004820152600560248201526411d4cc8c0d60da1b604482015290519081900360640190fd5b6001600160a01b0382161580159061063257506001600160a01b038216600114155b61066b576040805162461bcd60e51b8152602060048201526005602482015264475332303360d81b604482015290519081900360640190fd5b6001600160a01b038381166000908152602081905260409020548116908316146106c4576040805162461bcd60e51b8152602060048201526005602482015264475332303560d81b604482015290519081900360640190fd5b6001600160a01b03828116600081815260208181526040808320805487871680865283862080549289166001600160a01b0319938416179055968a16855282852080548216909717909655928490528254909416909155825191825291517ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf929181900390910190a1604080516001600160a01b038316815290517f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea269181900360200190a1505050565b60025490565b61079c61092a565b80600180540310156107dd576040805162461bcd60e51b8152602060048201526005602482015264475332303160d81b604482015290519081900360640190fd5b6001600160a01b038216158015906107ff57506001600160a01b038216600114155b610838576040805162461bcd60e51b8152602060048201526005602482015264475332303360d81b604482015290519081900360640190fd5b6001600160a01b03838116600090815260208190526040902054811690831614610891576040805162461bcd60e51b8152602060048201526005602482015264475332303560d81b604482015290519081900360640190fd5b6001600160a01b03828116600081815260208181526040808320805489871685528285208054919097166001600160a01b03199182161790965592849052825490941690915560018054600019019055825191825291517ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf929181900390910190a1806002541461092557610925816103a0565b505050565b333014610966576040805162461bcd60e51b8152602060048201526005602482015264475330333160d81b604482015290519081900360640190fd5b56fea26469706673582212208d1f361f91bdf24bc985b28323c13281f836bc09c0bb1bcfa451bd9e1317837864736f6c63430007060033";
