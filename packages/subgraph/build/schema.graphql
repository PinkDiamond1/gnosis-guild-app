type Guild @entity {
  id: ID!
  createdAt: String!
  lastMetadataUpdate: String!
  pausedAt: String
  owner: Bytes!
  name: String!
  symbol: String!
  metadataURI: String!
  active: Boolean!
  tokenAddress: Bytes!
  currentPrice: BigInt!
  subsPeriod: BigInt!
  totalSubscribers: BigInt!
  balances: [GuildBalance!] @derivedFrom(field: "guild")
  subscriptions: [GuildSubscription!] @derivedFrom(field: "guild")
  withdrawals: [GuildWithdrawal!] @derivedFrom(field: "guild")
}

type GuildBalance @entity {
  id: ID!
  guild: Guild!
  addedAt: String!
  tokenAddress: Bytes!
  currentBalance: BigInt!
  totalSubscriptions: BigInt!
}

type GuildSubscription @entity {
  id: ID!
  createdAt: String!
  guild: Guild!
  keyId: BigInt!
  owner: Bytes!
  expires: String!
  paymentHistory: [Payment!] @derivedFrom(field: "subscription")
}

type Payment @entity {
  id: ID!
  purchasedAt: String!
  subscription: GuildSubscription!
  token: Bytes!
  value: BigInt!
  transferSignature: Bytes
}

type GuildWithdrawal @entity {
  id: ID!
  guild: Guild!
  tokenAddress: Bytes!
  value: BigInt!
  beneficiary: Bytes!
}